class e{constructor(e={}){this.config={selector:"[data-trigger]",triggerAttribute:"data-trigger",threshold:0,rootMargin:"0px",debounceDelay:10,onChange:null,debug:!1,...e},this.observer=null,this.visibleElements=new Map,this.currentTriggerId=null,this.lastValidTriggerId=null,this._debounceTimer=null,this.instanceId=`scrolly-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,this._diagnosticCache=new Map,this.init()}init(){this.debouncedUpdate=this.debounce(()=>this.updateCurrentTrigger(),this.config.debounceDelay),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.setup()):this.setup()}setup(){this.setupObserver(),this.updateCurrentTrigger()}setupObserver(){const e={threshold:this.config.threshold,rootMargin:this.config.rootMargin};this.observer=new IntersectionObserver(e=>{e.forEach(e=>{const t=e.target,s=t.getAttribute(this.config.triggerAttribute);e.isIntersecting?this.visibleElements.set(t,s):this.visibleElements.delete(t)}),this.debouncedUpdate()},e);document.querySelectorAll(this.config.selector).forEach(e=>this.observer.observe(e))}updateCurrentTrigger(){const e=Array.from(this.visibleElements.entries());if(e.length>0){const t=e.reduce((e,t)=>{const s=e[0].getBoundingClientRect();return t[0].getBoundingClientRect().top<s.top?t:e})[1];this.lastValidTriggerId=t,this.setCurrentTrigger(t)}else null!==this.lastValidTriggerId&&this.setCurrentTrigger(this.lastValidTriggerId)}setCurrentTrigger(e){if(this.currentTriggerId!==e){const t=this.currentTriggerId;this.currentTriggerId=e,this.emitTriggerChange(e,t)}}emitTriggerChange(e,t){const s={current:e,previous:t,timestamp:Date.now(),instanceId:this.instanceId};"function"==typeof this.config.onChange&&this.config.onChange(s);const i=new CustomEvent("scrollTrigger",{detail:s});window.dispatchEvent(i)}debounce(e,t){return(...s)=>{clearTimeout(this._debounceTimer),this._debounceTimer=setTimeout(()=>e.apply(this,s),t)}}getCurrentTriggerId(){return this.currentTriggerId}observe(e){this.observer&&e&&this.observer.observe(e)}unobserve(e){this.observer&&e&&(this.observer.unobserve(e),this.visibleElements.delete(e))}destroy(){this._debounceTimer&&clearTimeout(this._debounceTimer),this.observer&&this.observer.disconnect(),this.visibleElements.clear(),this.currentTriggerId=null,this.lastValidTriggerId=null,this._diagnosticCache.clear()}diagnose(e=!1){const t=`diagnose_${e}`;if(this._diagnosticCache.has(t))return this._diagnosticCache.get(t);const s=[],i=document.querySelectorAll(this.config.selector),n=this.validateElements();s.push(...n);const r=this.checkPerformance();s.push(...r);const o=this._checkEnvironment();s.push(...o);const g={status:this._determineStatus(s),issues:s,summary:{totalElements:i.length,problematicElements:this._countProblematicElements(s),performanceScore:this._calculatePerformanceScore(s),timestamp:Date.now()}};return(this.config.debug||e)&&this._outputDiagnosticResults(g),this._diagnosticCache.set(t,g),setTimeout(()=>{this._diagnosticCache.delete(t)},5e3),g}validateElements(){const e=[],t=document.querySelectorAll(this.config.selector),s=new Set,i=window.innerHeight;return 0===t.length?(e.push({type:"no_elements",severity:"error",message:"監視対象要素が見つかりません",suggestion:`セレクタ "${this.config.selector}" に一致する要素を追加してください`}),e):(t.forEach((t,n)=>{const r=t.getAttribute(this.config.triggerAttribute);t.getBoundingClientRect();const o=window.getComputedStyle(t);r?s.has(r)?e.push({type:"duplicate_trigger_id",severity:"error",message:`トリガーID "${r}" が重複しています`,element:t,suggestion:"各要素には一意のトリガーIDを設定してください"}):s.add(r):e.push({type:"missing_trigger_id",severity:"error",message:`要素 ${n+1} にトリガーID属性がありません`,element:t,suggestion:`${this.config.triggerAttribute}="unique-id" を追加してください`});const g=t.offsetHeight;g<.5*i&&e.push({type:"insufficient_height",severity:"warning",message:`要素 "${r||n+1}" の高さが不十分です (${g}px)`,element:t,suggestion:"min-height: 100vh またはそれ以上の高さを設定してください"}),"none"===o.display?e.push({type:"element_hidden",severity:"error",message:`要素 "${r||n+1}" が display: none で非表示です`,element:t,suggestion:"display: none の代わりに visibility: hidden または opacity: 0 を使用してください"}):"hidden"===o.visibility&&e.push({type:"element_visibility_hidden",severity:"warning",message:`要素 "${r||n+1}" が visibility: hidden です`,element:t,suggestion:"IntersectionObserverは監視しますが、ユーザーには見えません"}),"fixed"===o.position&&e.push({type:"fixed_position",severity:"warning",message:`要素 "${r||n+1}" が position: fixed です`,element:t,suggestion:"スクロール位置の計算に影響する可能性があります"})}),e)}checkPerformance(){const e=[],t=document.querySelectorAll(this.config.selector);return t.length>50&&e.push({type:"too_many_elements",severity:"warning",message:`監視対象要素が多すぎます (${t.length}個)`,suggestion:"50個以下に抑えるか、段階的な要素追加を検討してください"}),Array.isArray(this.config.threshold)&&this.config.threshold.length>5?e.push({type:"complex_threshold",severity:"warning",message:`threshold配列が複雑すぎます (${this.config.threshold.length}個の値)`,suggestion:"単一の値または最大5個までの配列を推奨します"}):1===this.config.threshold&&e.push({type:"high_threshold",severity:"warning",message:"threshold: 1.0 は要素が完全に表示されるまで発火しません",suggestion:"0.1 - 0.5 程度の値を推奨します"}),this.config.debounceDelay>100?e.push({type:"high_debounce",severity:"info",message:`debounceDelay が大きすぎる可能性があります (${this.config.debounceDelay}ms)`,suggestion:"応答性を重視する場合は50ms以下を推奨します"}):this.config.debounceDelay<5&&e.push({type:"low_debounce",severity:"info",message:`debounceDelay が小さすぎる可能性があります (${this.config.debounceDelay}ms)`,suggestion:"パフォーマンスを重視する場合は10ms以上を推奨します"}),e}_checkEnvironment(){const e=[];Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)<=window.innerHeight&&e.push({type:"no_scroll",severity:"error",message:"ページがスクロール不可能です",suggestion:"コンテンツの高さを増やすか、overflow設定を確認してください"});const t=window.getComputedStyle(document.body),s=window.getComputedStyle(document.documentElement);"hidden"!==t.overflow&&"hidden"!==s.overflow||e.push({type:"overflow_hidden",severity:"error",message:"body または html に overflow: hidden が設定されています",suggestion:"overflow-x: hidden のみを使用するか、overflow設定を削除してください"});return document.querySelector('meta[name="viewport"]')||e.push({type:"no_viewport_meta",severity:"warning",message:"ビューポートメタタグが設定されていません",suggestion:'<meta name="viewport" content="width=device-width, initial-scale=1.0"> を追加してください'}),window.IntersectionObserver||e.push({type:"no_intersection_observer",severity:"error",message:"IntersectionObserverがサポートされていません",suggestion:"ポリフィルを追加するか、対応ブラウザを使用してください"}),e}_determineStatus(e){return e.some(e=>"error"===e.severity)?"error":e.some(e=>"warning"===e.severity)?"warning":"ok"}_countProblematicElements(e){const t=new Set;return e.forEach(e=>{e.element&&t.add(e.element)}),t.size}_calculatePerformanceScore(e){let t=10;return e.forEach(e=>{switch(e.severity){case"error":t-=3;break;case"warning":t-=1;break;case"info":t-=.5}}),Math.max(0,t)}_outputDiagnosticResults(e){console.group(`${{ok:"✅",warning:"⚠️",error:"❌"}[e.status]} Scrolltering 診断結果 (ID: ${this.instanceId.split("-").pop()})`),console.log("📊 概要:",e.summary),e.issues.length>0?(console.group("🔍 検出された問題:"),e.issues.forEach((e,t)=>{console.log(`${{error:"🚫",warning:"⚠️",info:"ℹ️"}[e.severity]} ${e.message}`),console.log(`   💡 ${e.suggestion}`),e.element&&console.log("   🎯 要素:",e.element)}),console.groupEnd()):console.log("✨ 問題は検出されませんでした"),console.groupEnd()}}
/**
 * Simple Scrolly Triggering System
 * 
 * @version 1.0.0
 * @author Your Name
 * @license MIT
 */export{e as default};
